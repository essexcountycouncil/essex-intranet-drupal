diff --git a/composer.json b/composer.json
index e783327..dc0a1bb 100644
--- a/composer.json
+++ b/composer.json
@@ -23,7 +23,7 @@
   "minimum-stability": "dev",
   "require": {
     "drupal/core": "^8.8 || ^9",
-    "drupal/group": "~1.0"
+    "drupal/group": "~3.0"
   },
   "require-dev": {
     "drupal/variationcache": "~1.0"
diff --git a/entitygroupfield.module b/entitygroupfield.module
index 8412078..f60e4a0 100644
--- a/entitygroupfield.module
+++ b/entitygroupfield.module
@@ -33,7 +33,7 @@ function entitygroupfield_entity_base_field_info(EntityTypeInterface $entity_typ
       $fields['entitygroupfield'] = BaseFieldDefinition::create('entitygroupfield')
         ->setName('entitygroupfield')
         ->setTargetEntityTypeId($entity_type->id())
-        ->setSetting('target_type', 'group_content')
+        ->setSetting('target_type', 'group_relationship')
         ->setLabel($field_label)
         ->setTranslatable(FALSE)
         ->setComputed(TRUE)
diff --git a/src/Field/EntityGroupFieldItemList.php b/src/Field/EntityGroupFieldItemList.php
index 7a99e01..6e91ade 100644
--- a/src/Field/EntityGroupFieldItemList.php
+++ b/src/Field/EntityGroupFieldItemList.php
@@ -4,7 +4,7 @@ namespace Drupal\entitygroupfield\Field;
 
 use Drupal\Core\Field\EntityReferenceFieldItemList;
 use Drupal\Core\TypedData\ComputedItemListTrait;
-use Drupal\group\Entity\GroupContent;
+use Drupal\group\Entity\GroupRelationship;
 
 /**
  * A computed property for the related groups.
@@ -28,7 +28,7 @@ class EntityGroupFieldItemList extends EntityReferenceFieldItemList {
       return NULL;
     }
 
-    $group_contents = GroupContent::loadByEntity($this->getEntity());
+    $group_contents = GroupRelationship::loadByEntity($this->getEntity());
     if (empty($group_contents)) {
       return NULL;
     }
@@ -67,7 +67,7 @@ class EntityGroupFieldItemList extends EntityReferenceFieldItemList {
         $group_content_ids[] = $group_content_entity->id();
       }
       // Deleting entities.
-      $group_contents = GroupContent::loadByEntity($host_entity);
+      $group_contents = GroupRelationship::loadByEntity($host_entity);
       foreach ($group_contents as $group_content_id => $group_content_entity) {
         if (!in_array($group_content_id, $group_content_ids)) {
           $group_content_entity->delete();
diff --git a/src/Plugin/Field/FieldWidget/EntityGroupFieldWidgetBase.php b/src/Plugin/Field/FieldWidget/EntityGroupFieldWidgetBase.php
index efac04d..67e6e03 100644
--- a/src/Plugin/Field/FieldWidget/EntityGroupFieldWidgetBase.php
+++ b/src/Plugin/Field/FieldWidget/EntityGroupFieldWidgetBase.php
@@ -7,7 +7,8 @@ use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
-use Drupal\group\Plugin\GroupContentEnablerManagerInterface;
+use Drupal\group\Entity\GroupRelationshipType;
+use Drupal\group\Plugin\Group\Relation\GroupRelationTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Session\AccountProxyInterface;
@@ -23,11 +24,11 @@ use Drupal\Core\Entity\EntityRepository;
 abstract class EntityGroupFieldWidgetBase extends WidgetBase implements ContainerFactoryPluginInterface {
 
   /**
-   * The Group Content Plugin Manager.
+   * The Group Relation Plugin Manager.
    *
-   * @var \Drupal\group\Plugin\GroupContentEnablerManagerInterface
+   * @var \Drupal\group\Plugin\Group\Relation\GroupRelationTypeManagerInterface;
    */
-  protected $groupContentPluginManager;
+  protected $groupRelationTypeManager;
 
   /**
    * The current user.
@@ -53,9 +54,9 @@ abstract class EntityGroupFieldWidgetBase extends WidgetBase implements Containe
   /**
    * {@inheritdoc}
    */
-  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, GroupContentEnablerManagerInterface $group_content_plugin_manager, AccountProxyInterface $current_user, EntityTypeManagerInterface $entity_type_manager, EntityRepository $entity_repository) {
+  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, GroupRelationTypeManagerInterface $group_relation_type_plugin_manager, AccountProxyInterface $current_user, EntityTypeManagerInterface $entity_type_manager, EntityRepository $entity_repository) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings);
-    $this->groupContentPluginManager = $group_content_plugin_manager;
+    $this->groupRelationTypeManager = $group_relation_type_plugin_manager;
     $this->currentUser = $current_user;
     $this->entityTypeManager = $entity_type_manager;
     $this->entityRepository = $entity_repository;
@@ -71,7 +72,7 @@ abstract class EntityGroupFieldWidgetBase extends WidgetBase implements Containe
       $configuration['field_definition'],
       $configuration['settings'],
       $configuration['third_party_settings'],
-      $container->get('plugin.manager.group_content_enabler'),
+      $container->get('group_relation_type.manager'),
       $container->get('current_user'),
       $container->get('entity_type.manager'),
       $container->get('entity.repository')
@@ -862,9 +863,10 @@ abstract class EntityGroupFieldWidgetBase extends WidgetBase implements Containe
     $selected_group = NestedArray::getValue($form_state->getValues(), $parent_keys);
 
     $group = \Drupal::entityTypeManager()->getStorage('group')->load($selected_group);
-    $group_content_type_id = $group->getGroupType()->getContentPlugin($widget_state['entity_plugin_id'])->getContentTypeConfigId();
+    $group_type = $group->getGroupType()->id();
+    $group_relationship_type = \Drupal::entityTypeManager()->getStorage('group_relationship_type')->getRelationshipTypeId($group_type, $widget_state['entity_plugin_id']);
     $widget_state['selected_group'] = $selected_group;
-    $widget_state['selected_bundle'] = $group_content_type_id;
+    $widget_state['selected_bundle'] = $group_relationship_type;
 
     // Clearing relation field.
     $user_input = $form_state->getUserInput();
@@ -975,7 +977,7 @@ abstract class EntityGroupFieldWidgetBase extends WidgetBase implements Containe
    */
   protected function getPluginGroupTypes($plugin_id) {
     $group_types = [];
-    $group_type_map = $this->groupContentPluginManager->getGroupTypePluginMap();
+    $group_type_map = $this->groupRelationTypeManager->getGroupTypePluginMap();
     foreach ($group_type_map as $group_type_id => $group_plugins_enabled) {
       foreach ($group_plugins_enabled as $group_plugin_id) {
         if ($group_plugin_id == $plugin_id) {
