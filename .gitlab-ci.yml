stages:
  - Test
  - build
  - development
  - development-postdeploy
  - build-test
  - development-test
  - preproduction
  - preproduction-postdeploy
  - production
  - production-postdeploy

Test:Required:
  stage: Test
  image: wodby/php:8.1
  before_script:
    - ''
  script:
    - composer install && composer tests-required
  allow_failure: false


# The cache strategy for the build job.
.cache_strategy_push:
  cache:
    paths:
      - vendor
      - web/core
      - web/libraries
      - web/modules/contrib
      - web/profiles/contrib
      - web/themes/contrib
      - drush/Commands
      - tests

# The cache strategy for the test jobs.
.cache_strategy_pull:
  extends: .cache_strategy_push
  cache:
    policy: pull

drupalci:build:
  extends: .cache_strategy_push
  stage: Test
  image: polynya/drupal-ci
  script:
    - robo job:build
  artifacts:
    untracked: true
    paths:
      - ./*
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - when: manual

# The template for CI tests.
.drupalci_test_template:
  extends: .cache_strategy_pull
  image: polynya/drupal-ci
  stage: Test
  services:
    - name: mariadb:latest
      alias: db
  variables:
    MYSQL_ROOT_PASSWORD: root
    MYSQL_DATABASE: drupal
  script:
    - mysql --version
    - sleep 10
    - echo "SHOW tables;"| mysql -u root -p"$MYSQL_ROOT_PASSWORD" -h db "${MYSQL_DATABASE}"
  dependencies:
    - drupalci:build

## Job to run Cypress on Drupal-CI.
drupalci-bdd:
  stage: Test
  extends: .drupalci_test_template
  image: polynya/drupal-ci
  needs:
    - job: drupalci:build
  script:
    - bin/robo job:serve-drupal-install
    - bin/robo job:create-node
    - bin/robo job:cypress-tests-drupal-ci
  allow_failure: true
  artifacts:
    paths:
      - tests/reports
      - tests/cypress

build-and-push-images:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_PASS: ""
  before_script:
    - docker login -u${DOCKER_USER} -p${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker pull ${DOCKER_REGISTRY}/intranet-nginx-drupal || true
    - docker pull ${DOCKER_REGISTRY}/intranet-drupal-fpm || true
    - docker build -t ${DOCKER_REGISTRY}/intranet-drupal-fpm -t ${DOCKER_REGISTRY}/intranet-drupal-fpm${tag} -t intranet-drupal-fpm -f Dockerfile-drupal .
    - docker build -t ${DOCKER_REGISTRY}/intranet-nginx-drupal -t ${DOCKER_REGISTRY}/intranet-nginx-drupal${tag} -t intranet-nginx-drupal -f Dockerfile-nginx .
    - docker push ${DOCKER_REGISTRY}/intranet-nginx-drupal${tag}
    - docker push ${DOCKER_REGISTRY}/intranet-nginx-drupal
    - docker push ${DOCKER_REGISTRY}/intranet-drupal-fpm${tag}
    - docker push ${DOCKER_REGISTRY}/intranet-drupal-fpm
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - when: manual

generate-sbom:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_PASS: ""
  before_script:
    - docker login -u${DOCKER_USER} -p${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
    - apk add bash curl --update-cache
    - curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
  script:
    - docker pull ${DOCKER_REGISTRY}/portal-drupal-fpm${tag}
    - syft docker:${DOCKER_REGISTRY}/portal-drupal-fpm${tag} -o json=dockerimage.sbom.json
  only:
    - develop
    - /^release\//
  artifacts:
    paths:
      - dockerimage.sbom.json
    expire_in: 12 weeks
  needs:
    - job: build-and-push-images
  allow_failure: true
  environment:
    name: DEV
    action: access

analyse-sbom:
  stage: build
  image: ubuntu:latest
  before_script:
    - apt update
    - apt install -y curl
    - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
  script:
    - grype sbom:./dockerimage.sbom.json --only-fixed --add-cpes-if-none --fail-on critical
  only:
    - develop
    - /^release\//
  needs:
    - job: generate-sbom
      artifacts: true
  allow_failure: true

deploy-to-dev:
  image: mcr.microsoft.com/azure-cli
  stage: development
  needs:
    - job: build-and-push-images
  environment:
    name: development
    url: https://dev.essex-intranet.nomensa.xyz/
  before_script:
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - echo "Creating new revision of Container App"
    - |
      cat > revision.yml <<EOF
      properties:
        template:
          revisionSuffix: ${CI_PIPELINE_ID}
          scale:
            minReplicas: 0
            maxReplicas: 2
            rules:
              - name: "http-rule"
                http:
                  metadata:
                    concurrentRequests: 40
          containers:
            - image: acreccuksdev.azurecr.io/intranet-nginx-drupal$tag
              name: nginx
              resources:
                cpu: 0.25
                memory: 0.5Gi
              volumeMounts:
              - mountPath: /drupal/web/sites/default/files
                volumeName: filesharevol
              env:
              - name: X_ROBOTS_TAG
                value: noindex
              probes:
              - type: liveness
                httpGet:
                  path: "/08b5d5dc-f2de-4c78-86a7-d3ea80037430"
                  port: 80
                initialDelaySeconds: 5
                periodSeconds: 3
            - image: acreccuksdev.azurecr.io/intranet-drupal-fpm$tag
              name: drupal
              resources:
                cpu: 0.75
                memory: 1.5Gi
              volumeMounts:
              - mountPath: /drupal/web/sites/default/files
                volumeName: filesharevol
              env:
              - name: MYSQL_HOST
                value: mariadb-ecc-uks-dev.mariadb.database.azure.com
              - name: MYSQL_USER
                value: mariadb-root
              - name: MYSQL_DATABASE
                value: drupal_intranet
              - name: MYSQL_PASSWORD
                secretRef: mysql-password
              - name: OPENID_CONNECT_PARAMS
                secretRef: openid-connect-params
              probes:
              - type: liveness
                tcpSocket:
                  port: 9000
                initialDelaySeconds: 5
                periodSeconds: 3
      EOF
    - az containerapp revision copy --name intranet --resource-group rg-ecc-intranet-uks-dev --yaml revision.yml --subscription "Essex County Council (intranet)"
    - az containerapp update --name intranet --resource-group rg-ecc-intranet-uks-dev --subscription "Essex County Council (intranet)" --container-name drupal --set-env-vars "ENVIRONMENT=${ENVIRONMENT}" "FATHOM_ID=${FATHOM_ID}"
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - when: manual

drush-deploy-dev:
  image: mcr.microsoft.com/azure-cli
  stage: development-postdeploy
  needs: ["deploy-to-dev"]
  before_script:
    - apk add socat
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
    - az account set --subscription "Essex County Council (intranet)"
  script:
    - timeout 1200 socat EXEC:'az containerapp exec --command /drupal/deploy.sh --name intranet --container drupal --resource-group rg-ecc-intranet-uks-dev',pty,setsid,ctty STDIO,ignoreeof
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - when: manual


backstopjs_test:
  stage: development-test
  needs: [ "drush-deploy-dev" ]
  image:
    name: backstopjs/backstopjs:latest
    entrypoint: [""]
  variables:
    BACKSTOP_BASE_URL: https://dev.essex-intranet.nomensa.xyz
    BACKSTOP_REFERENCE_URL: https://intranet.essex.gov.uk
  script:
    - backstop --config=tests/backstop/backstop.config.js reference
    - backstop --config=tests/backstop/backstop.config.js test
  artifacts:
    when: always
    paths:
      - ./tests/backstop/backstop_data
    reports:
      junit: ./tests/backstop/backstop_data/ci_report/*.xml
  allow_failure: true

## Job to run Cypress on Dev.
dev-bdd:
  stage: development-test
  needs: ["drush-deploy-dev", "drupalci:build"]
  extends: .drupalci_test_template
  image: polynya/drupal-ci
  script:
    - bin/robo job:cypress-tests-dev
    - bin/robo job:backstop-tests-dev
  artifacts:
    paths:
      - ./tests/reports
      - ./tests/backstop/backstop_data
  allow_failure: true

pages:
  stage: development-test
  dependencies:
    - backstopjs_test
  script:
    - mv ./tests/backstop/backstop_data public
  artifacts:
    paths:
      - public

deploy-to-preprod:
  image: mcr.microsoft.com/azure-cli
  stage: preproduction
  needs:
    - job: build-and-push-images
  environment:
    name: preproduction
    url: https://preprod.essex-intranet.nomensa.xyz/
  before_script:
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - echo "Importing image from Development  into Pre-Production"
    - az acr import --force --name acreccukspre --source acreccuksdev.azurecr.io/intranet-nginx-drupal:${CI_COMMIT_REF_SLUG} --image intranet-nginx-drupal:${CI_COMMIT_REF_SLUG} --subscription "Essex County Council (Common)"
    - az acr import --force --name acreccukspre --source acreccuksdev.azurecr.io/intranet-nginx-drupal:${CI_COMMIT_REF_SLUG} --image intranet-nginx-drupal:latest --subscription "Essex County Council (Common)"
    - az acr import --force --name acreccukspre --source acreccuksdev.azurecr.io/intranet-drupal-fpm:${CI_COMMIT_REF_SLUG} --image intranet-drupal-fpm:${CI_COMMIT_REF_SLUG} --subscription "Essex County Council (Common)"
    - az acr import --force --name acreccukspre --source acreccuksdev.azurecr.io/intranet-drupal-fpm:${CI_COMMIT_REF_SLUG} --image intranet-drupal-fpm:latest --subscription "Essex County Council (Common)"
    - |
      cat > revision.yml <<EOF
      properties:
        template:
          revisionSuffix: ${CI_PIPELINE_ID}
          scale:
            minReplicas: 1
            maxReplicas: 3
            rules:
              - name: "http-rule"
                http:
                  metadata:
                    concurrentRequests: 40
          containers:
            - image: acreccukspre.azurecr.io/intranet-nginx-drupal:${CI_COMMIT_REF_SLUG}
              name: nginx
              resources:
                cpu: 0.25
                memory: 0.5Gi
              volumeMounts:
              - mountPath: /drupal/web/sites/default/files
                volumeName: filesharevol
              env:
              - name: X_ROBOTS_TAG
                value: noindex
              probes:
              - type: liveness
                httpGet:
                  path: "/08b5d5dc-f2de-4c78-86a7-d3ea80037430"
                  port: 80
                initialDelaySeconds: 5
                periodSeconds: 3
            - image: acreccukspre.azurecr.io/intranet-drupal-fpm:${CI_COMMIT_REF_SLUG}
              name: drupal
              resources:
                cpu: 0.75
                memory: 1.5Gi
              volumeMounts:
              - mountPath: /drupal/web/sites/default/files
                volumeName: filesharevol
              env:
              - name: MYSQL_HOST
                value: mariadb-ecc-uks-pre.mariadb.database.azure.com
              - name: MYSQL_USER
                value: mariadb-root
              - name: MYSQL_DATABASE
                value: drupal_intranet
              - name: MYSQL_PASSWORD
                secretRef: mysql-password
              - name: OPENID_CONNECT_PARAMS
                secretRef: openid-connect-params
              probes:
              - type: liveness
                tcpSocket:
                  port: 9000
                initialDelaySeconds: 5
                periodSeconds: 3
      EOF
    - echo "Creating new revision of Container App"
    - az containerapp revision copy --name intranet --resource-group rg-ecc-intranet-uks-pre --yaml revision.yml --subscription "Essex County Council (intranet)"
    - az containerapp update --name intranet --resource-group rg-ecc-intranet-uks-pre --subscription "Essex County Council (intranet)" --container-name drupal --set-env-vars "ENVIRONMENT=${ENVIRONMENT}" "FATHOM_ID=${FATHOM_ID}"
  rules:
    - when: manual

drush-deploy-preprod:
  image: mcr.microsoft.com/azure-cli
  stage: preproduction-postdeploy
  needs: ["deploy-to-preprod"]
  before_script:
    - apk add socat
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
    - az account set --subscription "Essex County Council (intranet)"
  script:
    - timeout 1200 socat EXEC:'az containerapp exec --command /drupal/deploy.sh --name intranet --container drupal --resource-group rg-ecc-intranet-uks-pre',pty,setsid,ctty STDIO,ignoreeof
  rules:
    - when: manual

deploy-to-prod:
  image: mcr.microsoft.com/azure-cli
  stage: production
  needs: ["deploy-to-preprod"]
  environment:
    name: production
    url: https://intranet.essex.gov.uk/
  before_script:
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - echo "Importing image from Pre-Production into Production"
    - az acr import --force --name acreccuksprod --source acreccukspre.azurecr.io/intranet-nginx-drupal:${CI_COMMIT_REF_SLUG} --image intranet-nginx-drupal:${CI_COMMIT_REF_SLUG} --subscription "Essex County Council (Common)"
    - az acr import --force --name acreccuksprod --source acreccukspre.azurecr.io/intranet-nginx-drupal:${CI_COMMIT_REF_SLUG} --image intranet-nginx-drupal:latest --subscription "Essex County Council (Common)"
    - az acr import --force --name acreccuksprod --source acreccukspre.azurecr.io/intranet-drupal-fpm:${CI_COMMIT_REF_SLUG} --image intranet-drupal-fpm:${CI_COMMIT_REF_SLUG} --subscription "Essex County Council (Common)"
    - az acr import --force --name acreccuksprod --source acreccukspre.azurecr.io/intranet-drupal-fpm:${CI_COMMIT_REF_SLUG} --image intranet-drupal-fpm:latest --subscription "Essex County Council (Common)"
    - echo "Creating new revision of Container App"
    - |
      cat > revision.yml <<EOF
      properties:
        template:
          revisionSuffix: ${CI_PIPELINE_ID}
          scale:
            minReplicas: 1
            maxReplicas: 3
            rules:
              - name: "http-rule"
                http:
                  metadata:
                    concurrentRequests: 40
          containers:
            - image: acreccuksprod.azurecr.io/intranet-nginx-drupal:${CI_COMMIT_REF_SLUG}
              name: nginx
              resources:
                cpu: 0.25
                memory: 0.5Gi
              volumeMounts:
              - mountPath: /drupal/web/sites/default/files
                volumeName: filesharevol
              env:
              - name: X_ROBOTS_TAG
                value: none
              - name: CANONICAL_HOST
                value: intranet.essex.gov.uk
              probes:
              - type: liveness
                httpGet:
                  path: "/08b5d5dc-f2de-4c78-86a7-d3ea80037430"
                  port: 80
                initialDelaySeconds: 5
                periodSeconds: 3
            - image: acreccuksprod.azurecr.io/intranet-drupal-fpm:${CI_COMMIT_REF_SLUG}
              name: drupal
              resources:
                cpu: 0.75
                memory: 1.5Gi
              volumeMounts:
              - mountPath: /drupal/web/sites/default/files
                volumeName: filesharevol
              env:
              - name: MYSQL_HOST
                value: mariadb-ecc-uks-prod.mariadb.database.azure.com
              - name: MYSQL_USER
                value: mariadb-root
              - name: MYSQL_DATABASE
                value: drupal_intranet
              - name: MYSQL_PASSWORD
                secretRef: mysql-password
              - name: OPENID_CONNECT_PARAMS
                secretRef: openid-connect-params
              probes:
              - type: liveness
                tcpSocket:
                  port: 9000
                initialDelaySeconds: 5
                periodSeconds: 3
      EOF
    - az containerapp revision copy --name intranet --resource-group rg-ecc-intranet-uks-prod --yaml revision.yml --subscription "Essex County Council (intranet)"
    - az containerapp update --name intranet --resource-group rg-ecc-intranet-uks-prod --subscription "Essex County Council (intranet)" --container-name drupal --set-env-vars "ENVIRONMENT=${ENVIRONMENT}" "FATHOM_ID=${FATHOM_ID}"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
    - if: '$CI_COMMIT_BRANCH =~ /^release\//'
      when: manual

drush-deploy-prod:
  image: mcr.microsoft.com/azure-cli
  stage: production-postdeploy
  needs: ["deploy-to-prod"]
  before_script:
    - apk add socat
    - az extension add --name containerapp
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
    - az account set --subscription "Essex County Council (intranet)"
  script:
    - timeout 1200 socat EXEC:'az containerapp exec --command /drupal/deploy.sh --name intranet --container drupal --resource-group rg-ecc-intranet-uks-prod',pty,setsid,ctty STDIO,ignoreeof
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^release\//'
      when: manual
