stages:
  - build-and-push-images
  - provision-database
  - update-app-service

build_image:
  stage: build-and-push-images
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - apk add py3-pip gcc musl-dev python3-dev libffi-dev openssl openssl-dev cargo make
    - pip install azure-cli
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
    - docker login -u${DOCKER_USER} -p${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
  script:
    - mkdir -p certs
    - az keyvault secret download --vault-name ${KEY_VAULT} --name ${KEY_NAME} --file nomxyz.combined.pem
    - openssl pkey -in nomxyz.combined.pem -out certs/privkey.pem
    - openssl crl2pkcs7 -nocrl -certfile nomxyz.combined.pem | openssl pkcs7 -print_certs -out certs/fullchain.pem
    - docker build -t ${DOCKER_REGISTRY}/drupal-fpm:latest -t drupal-fpm -f Dockerfile-drupal .
    - docker build -t ${DOCKER_REGISTRY}/nginx-drupal:latest -t nginx-drupal -f Dockerfile-nginx .
    - docker push ${DOCKER_REGISTRY}/nginx-drupal
    - docker push ${DOCKER_REGISTRY}/drupal-fpm
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    

provision-database:
  stage: provision-database
  script:
    - echo "To do - Provision database scripting when confirmed with devs"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

update-app-service:
  stage: update-app-service
  image: docker:20.10
  services:
    - docker:20.10-dind
  before_script:
    - apk add py3-pip gcc musl-dev python3-dev libffi-dev openssl openssl-dev cargo make
    - pip install azure-cli
    - az login --service-principal -u${ARM_CLIENT_ID} -p${ARM_CLIENT_SECRET} -t${ARM_TENANT_ID}
  script:
    - echo "Container app is restarting - environment will be down temporarily"
    - az container restart --name lgDrupalContainerGroup --resource-group ecc-drupal-dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual




