<?php

/**
 * @file
 * Localgov Restricted Content hooks.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeForm;

// To enable/disable the "Restricted content" flag.
const RESTRICTED_CONTENT_FORM_FLAG = TRUE;

/**
 * Implements hook_entity_view_mode_alter().
 */
function localgov_restricted_content_entity_view_mode_alter(&$view_mode, $entity, $context) {
  if (
    $entity->getEntityTypeId() === 'node' and
    \Drupal::currentUser()->isAnonymous() and
    \Drupal::service('localgov_restricted_content.restricted_content')
      ->isRestricted($entity)
  ) {
    // Check the anonymous view display mode exists before using it.
    $entity_view_display = \Drupal::entityTypeManager()->getStorage('entity_view_display');
    $anonymous_view_mode =  $view_mode . '_anonymous';
    if ($entity_view_display->load('node.' . $entity->bundle() . '.' . $anonymous_view_mode)) {
      $view_mode = $anonymous_view_mode;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function localgov_restricted_content_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  /** @var \Drupal\node\NodeForm $node_form */
  $node_form = $form_state->getBuildInfo()['callback_object'];

  if (!($node_form instanceof NodeForm)) {
    return;
  }

  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
  $entity = $node_form->getEntity();

  /** @var \Drupal\localgov_restricted_content\RestrictedContentInterface $restricted_content */
  $restricted_content = \Drupal::service('localgov_restricted_content.restricted_content');

  if ($restricted_content->isAncestorRestricted($entity)) {
    $form['localgov_restricted_content']['#suffix'] = t('<div class="form-item__label option">This is disabled because the page\'s parent is restricted.</div>');
    $form['localgov_restricted_content']['#disabled'] = TRUE;
  }

  // Determine whether to hide the Restricted content portion of the node edit
  // form.
  if (RESTRICTED_CONTENT_FORM_FLAG) {
    switch ($form_id) {
      case 'node_localgov_news_article_form':
      case 'node_localgov_news_article_edit_form':
      case 'node_localgov_newsroom_form':
      case 'node_localgov_newsroom_edit_form':
        break;

      default:
        $form['localgov_restricted_content']['#disabled'] = TRUE;
        break;

    }
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function localgov_restricted_content_entity_extra_field_info() {
  $return = [];
  $bundle_info = \Drupal::service('entity_type.bundle.info')->getBundleInfo('node');
  foreach ($bundle_info as $bundle => $bundle_info_item) {
    $return['node'][$bundle]['display']['restricted_content_sign_in'] = [
      'label' => t('Sign in link for listings'),
      'description' => t('Display sign in link on teasers, cards, etc.'),
      'visible' => TRUE,
    ];
    $return['node'][$bundle]['display']['restricted_content_sign_in_with_message'] = [
      'label' => t('Sign in link for pages'),
      'description' => t('Display sign in link with message on a restricted content page.'),
      'visible' => TRUE,
    ];
  }

  return $return;
}

/**
 * Implements hook_entity_view().
 *
 * Display sign-in message and/or link for anonymous users.
 */
function localgov_restricted_content_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if (\Drupal::currentUser()->isAuthenticated()) {
    return;
  }
  $content = $display->get('content');
  if (isset($content['restricted_content_sign_in_with_message'])) {
    $build['sign_in'] = [
      '#theme' => 'localgov_restricted_content_sign_in_with_message',
    ];
  }
  elseif (isset($content['restricted_content_sign_in'])) {
    $build['sign_in'] = [
      '#theme' => 'localgov_restricted_content_sign_in',
      '#destination' => $entity->toUrl(),
    ];
  }
}

/**
 * Implements hook_theme().
 */
function localgov_restricted_content_theme($existing, $type, $theme, $path) {
  return [
    'localgov_restricted_content_sign_in' => [
      'render element' => 'elements',
      'variables' => [
        'destination' => NULL,
      ],
    ],
    'localgov_restricted_content_sign_in_with_message' => [
      'render element' => 'elements',
      'variables' => [
        'destination' => NULL,
      ],
    ],
  ];
}
